"""modify_profile_image_length

Revision ID: 45ef99abc123
Revises: 37beda2499cc
Create Date: 2025-04-18 15:32:35.762541

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector

# revision identifiers, used by Alembic.
revision: str = '45ef99abc123'
down_revision: Union[str, None] = '37beda2499cc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 테이블 존재 여부 확인을 위한 인스펙터 생성
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    
    # 'profile_image' 컬럼의 타입을 변경하기 전에 컬럼 존재 확인
    columns = [col['name'] for col in inspector.get_columns('users')]
    if 'profile_image' in columns:
        # VARCHAR(500)에서 VARCHAR(2000)으로 변경
        op.alter_column('users', 'profile_image',
                        existing_type=sa.String(length=500),
                        type_=sa.String(length=2000),
                        existing_nullable=True)
        
        print("users 테이블의 profile_image 컬럼 길이가 500자에서 2000자로 변경되었습니다.")
    else:
        print("profile_image 컬럼이 users 테이블에 존재하지 않습니다.")
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 주의: 이미 500자를 초과하는 데이터가 있다면 롤백 시 데이터 손실 발생 가능
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    
    columns = [col['name'] for col in inspector.get_columns('users')]
    if 'profile_image' in columns:
        # VARCHAR(2000)에서 VARCHAR(500)으로 변경
        op.alter_column('users', 'profile_image',
                        existing_type=sa.String(length=2000),
                        type_=sa.String(length=500),
                        existing_nullable=True)
        
        print("users 테이블의 profile_image 컬럼 길이가 2000자에서 500자로 복원되었습니다.")
    
    # ### end Alembic commands ### 