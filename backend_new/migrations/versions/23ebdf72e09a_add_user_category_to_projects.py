"""add_user_category_to_projects

Revision ID: 23ebdf72e09a
Revises: a0127007ac8f
Create Date: 2024-12-26 08:28:51.228138

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '23ebdf72e09a'
down_revision: Union[str, None] = 'a0127007ac8f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('project_categories')
    op.add_column('categories', sa.Column('type', sa.String(length=50), nullable=False))
    op.alter_column('categories', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.drop_column('categories', 'description')
    op.drop_constraint('document_chunks_document_id_fkey', 'document_chunks', type_='foreignkey')
    op.create_foreign_key(None, 'document_chunks', 'documents', ['document_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('documents_project_id_fkey', 'documents', type_='foreignkey')
    op.create_foreign_key(None, 'documents', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.add_column('projects', sa.Column('user_category', sa.String(length=255), nullable=True))
    op.alter_column('projects', 'is_temporary',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('projects', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('projects', 'session_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('projects', 'session_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('projects', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('projects', 'is_temporary',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.drop_column('projects', 'user_category')
    op.drop_constraint(None, 'documents', type_='foreignkey')
    op.create_foreign_key('documents_project_id_fkey', 'documents', 'projects', ['project_id'], ['id'])
    op.drop_constraint(None, 'document_chunks', type_='foreignkey')
    op.create_foreign_key('document_chunks_document_id_fkey', 'document_chunks', 'documents', ['document_id'], ['id'])
    op.add_column('categories', sa.Column('description', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.alter_column('categories', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('categories', 'type')
    op.create_table('project_categories',
    sa.Column('project_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name='project_categories_category_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='project_categories_project_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_id', 'category_id', name='project_categories_pkey')
    )
    # ### end Alembic commands ###
