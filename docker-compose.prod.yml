services:
  postgres:
    env_file:
      - .env.production
      
  # TimescaleDB 프로덕션 오버라이드 (변경되는 부분만)
  timescaledb:
    env_file:
      - backend/stockeasy/collector/.env.production
    volumes:
      - timescale_data_prod:/var/lib/postgresql/data
      - ./backend/stockeasy/collector/database/init:/docker-entrypoint-initdb.d
      - ./backend/stockeasy/collector/database/config/pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: >
      postgres 
      -c shared_preload_libraries=timescaledb
      -c max_connections=200
      -c shared_buffers=512MB
      -c effective_cache_size=2GB
      -c work_mem=8MB
      -c maintenance_work_mem=128MB
      -c timezone=Asia/Seoul
      -c log_timezone=Asia/Seoul
      -c log_statement=mod
      -c log_min_duration_statement=1000
      -c hba_file=/etc/postgresql/pg_hba.conf
      -c listen_addresses='*'
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  base-image-prod:
    build:
      context: .
      dockerfile: Dockerfile.base.prod
    image: intellio-base-prod:latest
    volumes:
      - ./backend:/backend
    profiles: ["build"]

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.fastapi.prod
    env_file:
      - .env.production
    environment:
      - ENV=production
    volumes:
      - ./backend:/backend

  stock-data-collector:
    build:
      context: .
      dockerfile: Dockerfile.stockeasy.collector.prod
    env_file:
      - ./backend/stockeasy/collector/.env.production
    environment:
      - ENV=production
    volumes:
      - ./backend:/backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  celery-doceasy:
    build:
      context: .
      dockerfile: Dockerfile.celery.doceasy.prod
    env_file:
      - .env.production
    environment:
      - ENV=production
    volumes:
      - ./backend:/backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  celery-stockeasy:
    build:
      context: .
      dockerfile: Dockerfile.celery.stockeasy.prod
    env_file:
      - .env.production
    environment:
      - ENV=production
    volumes:
      - ./backend:/backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

volumes:
  timescale_data_prod:

networks:
  app-network:
    driver: bridge

