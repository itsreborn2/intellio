"""create other financial tables

Revision ID: f697c6ad55a3
Revises: ac9c2382b96f
Create Date: 2025-04-21 03:04:04.389402

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f697c6ad55a3'
down_revision: Union[str, None] = 'ac9c2382b96f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
  
    op.create_table('balance_sheet_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('year_month', sa.Integer(), nullable=False),
    sa.Column('value', sa.Numeric(precision=30, scale=2), nullable=False),
    sa.Column('cumulative_value', sa.Numeric(precision=30, scale=2), nullable=True),
    sa.Column('period_value', sa.Numeric(precision=30, scale=2), nullable=True),
    sa.Column('is_cumulative', sa.Boolean(), nullable=True),
    sa.Column('display_unit', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('Asia/Seoul', CURRENT_TIMESTAMP)"), nullable=False, comment='생성 시간 (Asia/Seoul)'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('Asia/Seoul', CURRENT_TIMESTAMP)"), nullable=False, comment='수정 시간 (Asia/Seoul)'),
    sa.ForeignKeyConstraint(['company_id'], ['stockeasy.companies.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['stockeasy.financial_item_mappings.id'], ),
    sa.ForeignKeyConstraint(['report_id'], ['stockeasy.financial_reports.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_id', 'company_id', 'item_id', 'year_month', name='uq_balance_sheet_data'),
    schema='stockeasy'
    )
    op.create_index('idx_balance_sheet_company_item', 'balance_sheet_data', ['company_id', 'item_id'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index('idx_balance_sheet_company_item_year_month', 'balance_sheet_data', ['company_id', 'item_id', 'year_month'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index('idx_balance_sheet_company_year_month', 'balance_sheet_data', ['company_id', 'year_month'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index('idx_balance_sheet_item_year_month', 'balance_sheet_data', ['item_id', 'year_month'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index('idx_balance_sheet_year_month', 'balance_sheet_data', ['year_month'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index(op.f('ix_stockeasy_balance_sheet_data_id'), 'balance_sheet_data', ['id'], unique=False, schema='stockeasy')
    op.create_table('cash_flow_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('year_month', sa.Integer(), nullable=False),
    sa.Column('value', sa.Numeric(precision=30, scale=2), nullable=False),
    sa.Column('cumulative_value', sa.Numeric(precision=30, scale=2), nullable=True),
    sa.Column('period_value', sa.Numeric(precision=30, scale=2), nullable=True),
    sa.Column('is_cumulative', sa.Boolean(), nullable=True),
    sa.Column('display_unit', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('Asia/Seoul', CURRENT_TIMESTAMP)"), nullable=False, comment='생성 시간 (Asia/Seoul)'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('Asia/Seoul', CURRENT_TIMESTAMP)"), nullable=False, comment='수정 시간 (Asia/Seoul)'),
    sa.ForeignKeyConstraint(['company_id'], ['stockeasy.companies.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['stockeasy.financial_item_mappings.id'], ),
    sa.ForeignKeyConstraint(['report_id'], ['stockeasy.financial_reports.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_id', 'company_id', 'item_id', 'year_month', name='uq_cash_flow_data'),
    schema='stockeasy'
    )
    op.create_index('idx_cash_flow_company_item', 'cash_flow_data', ['company_id', 'item_id'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index('idx_cash_flow_company_item_year_month', 'cash_flow_data', ['company_id', 'item_id', 'year_month'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index('idx_cash_flow_company_year_month', 'cash_flow_data', ['company_id', 'year_month'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index('idx_cash_flow_item_year_month', 'cash_flow_data', ['item_id', 'year_month'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index('idx_cash_flow_year_month', 'cash_flow_data', ['year_month'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index(op.f('ix_stockeasy_cash_flow_data_id'), 'cash_flow_data', ['id'], unique=False, schema='stockeasy')
    op.create_table('equity_change_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('year_month', sa.Integer(), nullable=False),
    sa.Column('value', sa.Numeric(precision=30, scale=2), nullable=False),
    sa.Column('cumulative_value', sa.Numeric(precision=30, scale=2), nullable=True),
    sa.Column('period_value', sa.Numeric(precision=30, scale=2), nullable=True),
    sa.Column('is_cumulative', sa.Boolean(), nullable=True),
    sa.Column('display_unit', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('Asia/Seoul', CURRENT_TIMESTAMP)"), nullable=False, comment='생성 시간 (Asia/Seoul)'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('Asia/Seoul', CURRENT_TIMESTAMP)"), nullable=False, comment='수정 시간 (Asia/Seoul)'),
    sa.ForeignKeyConstraint(['company_id'], ['stockeasy.companies.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['stockeasy.financial_item_mappings.id'], ),
    sa.ForeignKeyConstraint(['report_id'], ['stockeasy.financial_reports.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_id', 'company_id', 'item_id', 'year_month', name='uq_equity_change_data'),
    schema='stockeasy'
    )
    op.create_index('idx_equity_change_company_item', 'equity_change_data', ['company_id', 'item_id'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index('idx_equity_change_company_item_year_month', 'equity_change_data', ['company_id', 'item_id', 'year_month'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index('idx_equity_change_company_year_month', 'equity_change_data', ['company_id', 'year_month'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index('idx_equity_change_item_year_month', 'equity_change_data', ['item_id', 'year_month'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index('idx_equity_change_year_month', 'equity_change_data', ['year_month'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index(op.f('ix_stockeasy_equity_change_data_id'), 'equity_change_data', ['id'], unique=False, schema='stockeasy')
    op.create_table('income_statement_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('year_month', sa.Integer(), nullable=False),
    sa.Column('value', sa.Numeric(precision=30, scale=2), nullable=False),
    sa.Column('cumulative_value', sa.Numeric(precision=30, scale=2), nullable=True),
    sa.Column('period_value', sa.Numeric(precision=30, scale=2), nullable=True),
    sa.Column('is_cumulative', sa.Boolean(), nullable=True),
    sa.Column('display_unit', sa.String(length=20), nullable=False),
    sa.Column('statement_type', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('Asia/Seoul', CURRENT_TIMESTAMP)"), nullable=False, comment='생성 시간 (Asia/Seoul)'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('Asia/Seoul', CURRENT_TIMESTAMP)"), nullable=False, comment='수정 시간 (Asia/Seoul)'),
    sa.ForeignKeyConstraint(['company_id'], ['stockeasy.companies.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['stockeasy.financial_item_mappings.id'], ),
    sa.ForeignKeyConstraint(['report_id'], ['stockeasy.financial_reports.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_id', 'company_id', 'item_id', 'year_month', name='uq_income_statement_data'),
    schema='stockeasy'
    )
    op.create_index('idx_income_statement_company_item', 'income_statement_data', ['company_id', 'item_id'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index('idx_income_statement_company_item_year_month', 'income_statement_data', ['company_id', 'item_id', 'year_month'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index('idx_income_statement_company_year_month', 'income_statement_data', ['company_id', 'year_month'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index('idx_income_statement_item_year_month', 'income_statement_data', ['item_id', 'year_month'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index('idx_income_statement_year_month', 'income_statement_data', ['year_month'], unique=False, schema='stockeasy', postgresql_using='btree')
    op.create_index(op.f('ix_stockeasy_income_statement_data_id'), 'income_statement_data', ['id'], unique=False, schema='stockeasy')
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_stockeasy_income_statement_data_id'), table_name='income_statement_data', schema='stockeasy')
    op.drop_index('idx_income_statement_year_month', table_name='income_statement_data', schema='stockeasy', postgresql_using='btree')
    op.drop_index('idx_income_statement_item_year_month', table_name='income_statement_data', schema='stockeasy', postgresql_using='btree')
    op.drop_index('idx_income_statement_company_year_month', table_name='income_statement_data', schema='stockeasy', postgresql_using='btree')
    op.drop_index('idx_income_statement_company_item_year_month', table_name='income_statement_data', schema='stockeasy', postgresql_using='btree')
    op.drop_index('idx_income_statement_company_item', table_name='income_statement_data', schema='stockeasy', postgresql_using='btree')
    op.drop_table('income_statement_data', schema='stockeasy')
    op.drop_index(op.f('ix_stockeasy_equity_change_data_id'), table_name='equity_change_data', schema='stockeasy')
    op.drop_index('idx_equity_change_year_month', table_name='equity_change_data', schema='stockeasy', postgresql_using='btree')
    op.drop_index('idx_equity_change_item_year_month', table_name='equity_change_data', schema='stockeasy', postgresql_using='btree')
    op.drop_index('idx_equity_change_company_year_month', table_name='equity_change_data', schema='stockeasy', postgresql_using='btree')
    op.drop_index('idx_equity_change_company_item_year_month', table_name='equity_change_data', schema='stockeasy', postgresql_using='btree')
    op.drop_index('idx_equity_change_company_item', table_name='equity_change_data', schema='stockeasy', postgresql_using='btree')
    op.drop_table('equity_change_data', schema='stockeasy')
    op.drop_index(op.f('ix_stockeasy_cash_flow_data_id'), table_name='cash_flow_data', schema='stockeasy')
    op.drop_index('idx_cash_flow_year_month', table_name='cash_flow_data', schema='stockeasy', postgresql_using='btree')
    op.drop_index('idx_cash_flow_item_year_month', table_name='cash_flow_data', schema='stockeasy', postgresql_using='btree')
    op.drop_index('idx_cash_flow_company_year_month', table_name='cash_flow_data', schema='stockeasy', postgresql_using='btree')
    op.drop_index('idx_cash_flow_company_item_year_month', table_name='cash_flow_data', schema='stockeasy', postgresql_using='btree')
    op.drop_index('idx_cash_flow_company_item', table_name='cash_flow_data', schema='stockeasy', postgresql_using='btree')
    op.drop_table('cash_flow_data', schema='stockeasy')
    op.drop_index(op.f('ix_stockeasy_balance_sheet_data_id'), table_name='balance_sheet_data', schema='stockeasy')
    op.drop_index('idx_balance_sheet_year_month', table_name='balance_sheet_data', schema='stockeasy', postgresql_using='btree')
    op.drop_index('idx_balance_sheet_item_year_month', table_name='balance_sheet_data', schema='stockeasy', postgresql_using='btree')
    op.drop_index('idx_balance_sheet_company_year_month', table_name='balance_sheet_data', schema='stockeasy', postgresql_using='btree')
    op.drop_index('idx_balance_sheet_company_item_year_month', table_name='balance_sheet_data', schema='stockeasy', postgresql_using='btree')
    op.drop_index('idx_balance_sheet_company_item', table_name='balance_sheet_data', schema='stockeasy', postgresql_using='btree')
    op.drop_table('balance_sheet_data', schema='stockeasy')
    # ### end Alembic commands ###
