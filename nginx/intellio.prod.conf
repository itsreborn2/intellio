# HTTP를 HTTPS로 리다이렉트
server {
    listen 80;
    listen [::]:80;
    server_name intellio.kr www.intellio.kr doceasy.intellio.kr;

    location / {
        return 301 https://$host$request_uri;
    }
}

# Main 서비스 - HTTPS 서버 설정
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name intellio.kr www.intellio.kr;

    # SSL 인증서 설정
    ssl_certificate /etc/letsencrypt/live/intellio.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/intellio.kr/privkey.pem;

    # SSL 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # 보안 헤더 설정
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;

    # 파일 업로드 크기 제한 설정
    client_max_body_size 500M;

    # n8n 설정.
    location /n8n/ {
        proxy_pass http://localhost:5678/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        rewrite ^/n8n/(.*)$ /$1 break;
    }

    # pgAdmin 설정
    location /pgadmin {
        proxy_pass http://localhost:5055;
        proxy_set_header X-Script-Name /pgadmin;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 지원
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 타임아웃 설정
        proxy_connect_timeout 600s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
    }

    # Main 연결 (port 3000)
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Favicon
    location = /favicon.ico {
        proxy_pass http://localhost:3000/favicon.ico;
        access_log off;
        expires 30d;
    }

    # FastAPI 백엔드 API
    location /api/ {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # 디버깅을 위한 로깅 추가
        access_log /var/log/nginx/api_access.log;
        error_log /var/log/nginx/api_error.log debug;

        # CORS 헤더 제거 (FastAPI에서 처리)
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
    }
}

# DocEasy 서비스 - HTTPS 서버 설정
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name doceasy.intellio.kr;

    # SSL 인증서 설정
    ssl_certificate /etc/letsencrypt/live/intellio.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/intellio.kr/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # 보안 헤더 설정
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;

    # 파일 업로드 크기 제한 설정
    client_max_body_size 500M;

    # Next.js 정적 파일
    location /_next/static/ {
        proxy_pass http://localhost:3010/_next/static/;
        expires 365d;
        access_log off;
        add_header Cache-Control "public, no-transform";
    }

    # Favicon
    location = /favicon.ico {
        proxy_pass http://localhost:3010/favicon.ico;
        access_log off;
        expires 30d;
    }

    location / {
        proxy_pass http://localhost:3010;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # FastAPI 백엔드 API
    location /api/ {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # 디버깅을 위한 로깅 추가
        access_log /var/log/nginx/api_access.log;
        error_log /var/log/nginx/api_error.log debug;

        # CORS 헤더 제거 (FastAPI에서 처리)
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
    }

    # 정적 파일 캐싱
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        proxy_pass http://localhost:3010;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }
}

# Stockeasy 서비스 - HTTPS 서버 설정
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name stockeasy.intellio.kr;

    # SSL 인증서 설정
    ssl_certificate /etc/letsencrypt/live/intellio.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/intellio.kr/privkey.pem;

    # SSL 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # 보안 헤더 설정
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;

    # 파일 업로드 크기 제한 설정
    client_max_body_size 500M;

    # Stockeasy 연결 (port 3020)
    location / {
        proxy_pass http://localhost:3020;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS 헤더 추가
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        
        # OPTIONS 요청 처리
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }
    }

    # Favicon
    location = /favicon.ico {
        proxy_pass http://localhost:3020/favicon.ico;
        access_log off;
        expires 30d;
    }

    # FastAPI 백엔드 API
    location /api/ {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # 디버깅을 위한 로깅 추가
        access_log /var/log/nginx/api_access.log;
        error_log /var/log/nginx/api_error.log debug;

        # CORS 헤더 제거 (FastAPI에서 처리)
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
    }

    # Next.js 정적 파일
    location /_next/ {
        proxy_pass http://localhost:3020;
        expires 365d;
        access_log off;
        add_header Cache-Control "public, no-transform";
    }

    # 정적 파일 캐싱
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        proxy_pass http://localhost:3020;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    
    # requestfile 디렉토리를 위한 새로운 설정
    location /requestfile/ {
        alias /mnt/volume_sgp1_02/intellio_prod/frontend/stockeasy/public/requestfile/;
        
        # 심볼릭 링크 허용 옵션
        disable_symlinks off;
        
        # 디버그 정보 추가
        add_header X-Debug-Path $request_filename always;
        add_header X-Debug-Uri $uri always;
        
        # CORS 헤더 추가
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        
        # 파일 유형 설정
        default_type text/csv;
        
        # OPTIONS 요청 처리
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }
        
        # 로깅 설정
        access_log /var/log/nginx/rs_etf_csv_access.log;
        error_log /var/log/nginx/rs_etf_csv_error.log debug;
    }
}