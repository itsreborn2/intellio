<<<<<<< HEAD
## Next.js: Route Handler 우선 사용
=======
답변을 할때 아래의 폴더에 있는 소스들을 참고해
-backend_new
-frontend
>>>>>>> db7dd99502c8d3242b8b37ac8aa0cb2badcef9f9

-   **모든 API 엔드포인트는 Route Handler를 사용하여 구현하세요.**
-   **데이터베이스 작업, 외부 API 호출, 인증 등 복잡한 서버 작업은 반드시 Route Handler를 사용하세요.**

## 답변 시 소스를 찾을때
- 답변을 할때 아래의 폴더에 있는 소스들을 참고해 
- backend_new
- frontend
- 프로젝트 폴더의 구조는 docs/개발_가이드.md의 '2. 프로젝트 폴더 구조'를 참고해

## TypeScript 인터페이스 정의 규칙: 'I' 접두사 사용

-   **인터페이스 정의 시 이름 앞에 'I'를 접두사로 추가하세요.**
-   예시:
    ```typescript
    export interface IComment {
        id: string
        text: string
        author: string
    }
    ```


사용자가 문서를 업로드하면 바로 문서 포맷에 맞는 기능으로 문서를 추출하고 청크하여 임배딩을 완료한다.
그 이후 사용자는 프롬프트를 입력하고 결과를 디폴트 템플릿에선 모드에 따라  두가지로 받는다.
-Chat 모드: 여러 문서의 데이터를 종합하여 패턴 도출
-Table 모드: 한 문서 내의 데이터를 상세히 분석하고 문맥화