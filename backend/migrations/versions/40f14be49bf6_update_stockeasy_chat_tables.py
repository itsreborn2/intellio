"""update stockeasy chat tables

Revision ID: 40f14be49bf6
Revises: 618bd77ea524
Create Date: 2025-04-05 17:40:02.633844

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector

# revision identifiers, used by Alembic.
revision: str = '40f14be49bf6'
down_revision: Union[str, None] = '618bd77ea524'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 스키마와 테이블 존재 여부 확인을 위한 인스펙터 생성
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    
    # 스키마 확인 및 생성
    schemas = inspector.get_schema_names()
    if 'stockeasy' not in schemas:
        op.execute('CREATE SCHEMA IF NOT EXISTS stockeasy')
    
    # 테이블 존재 여부 확인
    tables = inspector.get_table_names(schema='stockeasy')
    
    # 기존 테이블에서 불필요한 칼럼 삭제 (테이블이 존재하는 경우)
    if 'stockeasy_chat_sessions' in tables:
        # stock_code 및 stock_name 칼럼 존재 여부 확인 및 삭제
        columns = [col['name'] for col in inspector.get_columns('stockeasy_chat_sessions', schema='stockeasy')]
        if 'stock_code' in columns:
            op.drop_column('stockeasy_chat_sessions', 'stock_code', schema='stockeasy')
        if 'stock_name' in columns:
            op.drop_column('stockeasy_chat_sessions', 'stock_name', schema='stockeasy')
    
    # stockeasy_chat_sessions 테이블이 없는 경우에만 생성
    if 'stockeasy_chat_sessions' not in tables:
        op.create_table('stockeasy_chat_sessions',
        sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False, comment='채팅 세션 ID'),
        sa.Column('user_id', sa.UUID(), nullable=False, comment='사용자 ID'),
        sa.Column('title', sa.String(length=255), server_default='새 채팅', nullable=False, comment='채팅 세션 제목'),
        sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False, comment='활성화 여부'),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('Asia/Seoul', CURRENT_TIMESTAMP)"), nullable=False, comment='생성 시간 (Asia/Seoul)'),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('Asia/Seoul', CURRENT_TIMESTAMP)"), nullable=False, comment='수정 시간 (Asia/Seoul)'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        schema='stockeasy'
        )
        op.create_index(op.f('ix_stockeasy_stockeasy_chat_sessions_user_id'), 'stockeasy_chat_sessions', ['user_id'], unique=False, schema='stockeasy')
    
    # stockeasy_chat_messages 테이블이 없는 경우에만 생성
    if 'stockeasy_chat_messages' not in tables:
        op.create_table('stockeasy_chat_messages',
        sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False, comment='메시지 ID'),
        sa.Column('chat_session_id', sa.UUID(), nullable=False, comment='채팅 세션 ID'),
        sa.Column('role', sa.String(length=20), nullable=False, comment='메시지 역할 (user, assistant, system)'),
        sa.Column('content_type', sa.String(length=50), server_default='text', nullable=False, comment='메시지 콘텐츠 타입 (text, image, chart, file, card 등)'),
        sa.Column('content', sa.Text(), nullable=False, comment='메시지 텍스트 내용'),
        sa.Column('message_data', sa.dialects.postgresql.JSONB(), nullable=True, comment='메시지 타입별 구조화된 데이터 (차트 데이터, 카드 정보 등)'),
        sa.Column('data_url', sa.Text(), nullable=True, comment='외부 리소스 URL (이미지, 차트 데이터 등)'),
        sa.Column('message_metadata', sa.dialects.postgresql.JSONB(), nullable=True, comment='메시지 추가 메타데이터 (처리 정보, 컨텍스트 등)'),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('Asia/Seoul', CURRENT_TIMESTAMP)"), nullable=False, comment='생성 시간 (Asia/Seoul)'),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('Asia/Seoul', CURRENT_TIMESTAMP)"), nullable=False, comment='수정 시간 (Asia/Seoul)'),
        sa.ForeignKeyConstraint(['chat_session_id'], ['stockeasy.stockeasy_chat_sessions.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        schema='stockeasy'
        )
        op.create_index('ix_stockeasy_chat_messages_chat_session_id_created_at', 'stockeasy_chat_messages', ['chat_session_id', 'created_at'], unique=False, schema='stockeasy')
        op.create_index(op.f('ix_stockeasy_stockeasy_chat_messages_chat_session_id'), 'stockeasy_chat_messages', ['chat_session_id'], unique=False, schema='stockeasy')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 마이그레이션 롤백 시 테이블 존재 여부 확인
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    tables = inspector.get_table_names(schema='stockeasy')
    
    if 'stockeasy_chat_messages' in tables:
        # 인덱스 존재 여부 확인
        indices = inspector.get_indexes('stockeasy_chat_messages', schema='stockeasy')
        index_names = [idx['name'] for idx in indices]
        
        if 'ix_stockeasy_stockeasy_chat_messages_chat_session_id' in index_names:
            op.drop_index(op.f('ix_stockeasy_stockeasy_chat_messages_chat_session_id'), table_name='stockeasy_chat_messages', schema='stockeasy')
        
        if 'ix_stockeasy_chat_messages_chat_session_id_created_at' in index_names:
            op.drop_index('ix_stockeasy_chat_messages_chat_session_id_created_at', table_name='stockeasy_chat_messages', schema='stockeasy')
        
        op.drop_table('stockeasy_chat_messages', schema='stockeasy')
    
    if 'stockeasy_chat_sessions' in tables:
        # 인덱스 존재 여부 확인
        indices = inspector.get_indexes('stockeasy_chat_sessions', schema='stockeasy')
        index_names = [idx['name'] for idx in indices]
        
        if 'ix_stockeasy_stockeasy_chat_sessions_user_id' in index_names:
            op.drop_index(op.f('ix_stockeasy_stockeasy_chat_sessions_user_id'), table_name='stockeasy_chat_sessions', schema='stockeasy')
        
        op.drop_table('stockeasy_chat_sessions', schema='stockeasy')
    # ### end Alembic commands ###
